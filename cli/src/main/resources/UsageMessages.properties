#
# WildFly Glow CLI messages
#
#
# Main Command Welcome Message
# This is only printed when running wildfl-glow without any parameters.
glow.welcomeMessage = @|bold \nWelcome to WildFly Glow CLI!|@\n\
  \n\
  WildFly Glow helps you create a WildFly server based on the content of your WAR/JAR/EAR deployment(s).\n\
  Call @|fg(yellow) wildfly-glow scan <path to your deployment file(s)>|@ to get started.\n
app-name= Name to use when creating OpenShift deployment. Optional, by default the scanned deployment name (without extension) is used.
add-layers-for-jndi = List of layers. In the case some layers are missing, consider adding them manually with this option.
add-ons = List of add-ons to enable. To get the list of possible add-ons, use the @|fg(yellow) show-add-ons|@ command.
batch = Batch mode disables any colorization of the output.
build-env-file = The path to a file that contains environment variables (in the form env=value) to be passed to the OpenShift build. Can only be used with @|fg(yellow) OPENSHIFT|@ kind of provisioning.
channels= Path to a yaml file containing one or more channels.
config= Path to a file containing the options.
cli-script = The path to a CLI script file that only contains CLI commands in order to fine tune the server on OpenShift deployment. Can only be used with @|fg(yellow) OPENSHIFT|@ kind of provisioning.
cloud = When deploying your application to the cloud. It will fine tune the WildFly server for the cloud. N.B.: Building a Bootable JAR is not supported for the cloud.
config-stability-level = Specify a stability to be used when provisioning the server configuration. WildFly Glow can identify server features that would be not provisioned if no stability level were specified. The stability can be @|fg(yellow) default|@, @|fg(yellow) community|@, @|fg(yellow) preview|@, @|fg(yellow) experimental|@.
deployments = List of path to war|jar|ear files to scan.
disable-deployers = A comma separated list of deployer names to disable. To retrieve all the deployer names call the @|fg(yellow) show-configuration|@ operation. To disable them all, use @|fg(yellow) ALL|@ value. Can only be used with @|fg(yellow) OPENSHIFT|@ kind of provisioning.
disable-fork-embedded = In order to disable executing the WildFly embedded server (that is required at provisioning time) in a forked process.
docker-image-name = Name of the docker image when --provision=DOCKER is specified. By default an image name is computed based on the WildFly server version.
dry-run = When using the provision target 'openshift', set this option to only generate the Dockerfiles and OpenShift resources allowing you to setup your docker builds and application deployment outside of OpenShift cluster, in a flexible way.
enable-deployers = A comma separated list of deployer names to enable. Can only be used when @|fg(yellow)--disable-deployers|@ is set to @|fg(yellow)ALL|@. To retrieve all the deployer names call the @|fg(yellow) show-configuration|@ operation. Can only be used with @|fg(yellow) OPENSHIFT|@ kind of provisioning.
env-file = The path to a file that contains environment variables (in the form env=value) to be passed to the OpenShift deployment. Can only be used with @|fg(yellow) OPENSHIFT|@ kind of provisioning.
exclude-archives-from-scan = Comma-separated list of archives to exclude from scanning. Wildcards ('*') are allowed. N.B. Just the name of the archive is matched, do not attempt to specify a full path within the jar. The following example would be a valid list: @|fg(italic) my-jar.jar,*-internal.rar|@:
fails-on-error= By default provisioning will be aborted if an error is reported by WildFly Glow. Set this option to false to not fail and process with the provisioning.
ha = High Availability profile. Set this option when deploying an application into an HA WildFly Server.
init-script = The path to a script that contains commands (JBoss CLI, add-user, ...) to fine tune the server on OpenShift deployment. Can only be used with @|fg(yellow) OPENSHIFT|@ kind of provisioning.
input-feature-packs-file = Galleon feature-packs used by wildfly-glow are retrieved from an online registry. To override the set of feature-packs you can specify a path to a Galleon provisioning XML file containing the set of Galleon feature-packs to be used by wildfly-glow.
output-dir = If specifying to provision, the directory where the result will be output.
package-stability-level = Specify a stability to be used when provisioning server packages. WildFly Glow can identify server packages that would be not provisioned if no stability level were specified. The stability can be @|fg(yellow) default|@, @|fg(yellow) community|@, @|fg(yellow) preview|@, @|fg(yellow) experimental|@.
properties = A space separated list of Java system properties. When multiple system properties are set, the list must be enclosed in double quotes. For example: "-Dfoo=bar -DmyProp"
provision = The kind of provisioning to produce based on what has been discovered. Can be @|fg(yellow) SERVER|@: a provisioned WildFly server, @|fg(yellow) BOOTABLE_JAR|@: a WildFly Bootable JAR, @|fg(yellow) DOCKER_IMAGE|@: a Docker image, @|fg(yellow) OPENSHIFT|@: a server built and deploy on OpenShift, you must be logged to a cluster, or @|fg(yellow) PROVISIONING_XML|@: a Galleon provisioning.xml file.
server-version = The WildFly server version to deploy the deployment to. By default the latest WildFly version is used.
spaces= The additional spaces to look for Galleon feature-packs when scanning deployments. By default only the "default" space is used. To list known spaces call the @|fg(yellow) show-configuration|@ command.
stability-level = Specify a stability to be used when provisioning a server. This is an option to set both config-stability-level and package-stability-level options with a single option. The stability can be @|fg(yellow) default|@, @|fg(yellow) community|@, @|fg(yellow) preview|@, @|fg(yellow) experimental|@.
suggest = WildFly Glow will suggest additional add-ons and environment variables that are usable with your deployment.
usage.commandListHeading = %nCommands:%n
usage.optionListHeading = %nOptions:%n
usage.synopsisHeading = %nUsage:\u0020
verbose = Prints additional information. When scanning a deployment, the set of rules that selected a Galleon layer are printed. Enable verbose if the command fails in order to get details.
version = Prints the version of wildfly-glow and exits.
wildfly-glow.completion.usage.header =  Generates a bash completion script. To enable auto-completion, use the command `source <(./wildfly-glow completion)`.
wildfly-glow.help = Displays the help information for the command.
wildfly-glow.go-offline.usage.header =  Generate a zip file containing all that is required to run the tool in offline mode. Put the generated zip in the working directory of WildFly Glow to work offline.
wildfly-glow.scan.usage.header = Scan your deployment(s) to produce a WildFly server.
wildfly-glow.show-add-ons.usage.header = Shows all the WildFly server add-ons one can set with the @|fg(yellow) --add-ons|@ option to the @|fg(yellow) scan|@ command.
wildfly-glow.show-configuration.usage.header = Shows the Galleon feature-packs and Galleon layers known by WildFly Glow.
wildfly-glow.show-server-versions.usage.header = Shows all WildFly server versions one can set with the @|fg(yellow) --server-version|@ option.
# Footer
# This only appears in the main command usage.
wildfly-glow.usage.footer = %nUse @|fg(yellow) wildfly-glow <command> --help|@ to show help information for the command.
# for the main command do not prepend with new line character:
wildfly-glow.usage.synopsisHeading = Usage:\u0020
wildfly-preview = To deploy the deployment into a WildFly preview server (by default normal WildFly server is used).
